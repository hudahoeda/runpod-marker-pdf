name: CD | Build-Test-Release

on:
  push:
    branches:
      - "main"
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      image_tag:
        description: "Docker Image Tag"
        required: false
        default: "dev"

jobs:
  docker-build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare image name
        id: prepare-image
        run: |
          # Make repository name lowercase for GHCR compatibility
          REPO_NAME=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          echo "IMAGE_NAME=ghcr.io/${REPO_NAME}/marker-pdf" >> $GITHUB_ENV

      # Build and push step
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE_NAME }}:${{ (github.event_name == 'release' && github.event.release.tag_name) || (github.event_name == 'workflow_dispatch' && github.event.inputs.image_tag) || 'dev' }}

  dev-test:
    needs: docker-build
    runs-on: ubuntu-latest

    steps:
      # Checkout
      - uses: actions/checkout@v4

      - name: Prepare image name
        id: prepare-image
        run: |
          # Make repository name lowercase for GHCR compatibility
          REPO_NAME=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          echo "IMAGE_NAME=ghcr.io/${REPO_NAME}/marker-pdf" >> $GITHUB_ENV

      # Tests
      - name: Run Tests
        if: github.event_name != 'release'
        id: run-tests
        uses: direlines/runpod-test-runner@v1.7
        with:
          image-tag: ${{ env.IMAGE_NAME }}:${{ (github.event_name == 'release' && github.event.release.tag_name) || (github.event_name == 'workflow_dispatch' && github.event.inputs.image_tag) || 'dev' }}
          runpod-api-key: ${{ secrets.RUNPOD_API_KEY }}
          request-timeout: 600

      # Pass/Fail
      - name: Verify Tests
        env:
          TOTAL_TESTS: ${{ steps.run-tests.outputs.total-tests }}
          SUCCESSFUL_TESTS: ${{ steps.run-tests.outputs.succeeded }}
          RESULTS: ${{ steps.run-tests.outputs.results }}
        run: |
          echo "Total tests: $TOTAL_TESTS"
          echo "Successful tests: $SUCCESSFUL_TESTS"
          echo "Full results: $RESULTS"
          if [ "$TOTAL_TESTS" != "$SUCCESSFUL_TESTS" ]; then
              exit 1
          fi 